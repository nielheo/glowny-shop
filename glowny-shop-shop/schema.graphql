schema {
  query: query
  mutation: mutation
}

input AddProductInput {
  # Shop code
  shopCode: String!

  # SKU
  sku: String!

  # Product name
  name: String!

  # Product description
  description: String!

  # Price currency
  curr: String!

  # Price currency
  price: Float!

  # Put product for sales
  isActive: Boolean!

  # Id of creator
  userId: String!
}

input AddUserInput {
  # User email
  email: String!

  # User first name
  firstName: String!

  # User first name
  lastName: String!

  # Site type status
  type: Site!

  # Unique Code of your shop
  shopCode: String

  # List or role id
  roles: [String]!
}

type mutation {
  # Add New Product
  addProduct(
    # Add Product Input
    input: AddProductInput!
  ): Product

  # Add New User
  addUser(
    # Add User Input
    input: AddUserInput!
  ): User

  # Update Product
  updateProduct(
    # Update Product Input
    input: UpdateProductInput!
  ): Product

  # Update user active status
  updateProductActive(
    # Product id
    input: UpdateProductActiveInput!
  ): Product

  # Update User
  updateUser(
    # Update User Input
    input: UpdateUserInput!
  ): User

  # Update user active status
  updateUserActive(
    # User id
    input: UpdateUserActiveInput!
  ): User
}

# A product
type Product {
  id: String
  sku: String
  name: String
  description: String
  curr: String
  price: Float
  isActive: Boolean
}

type query {
  echo(message: String): String
  viewer: Viewer
}

# A role
type Role {
  id: String
  code: String
  title: String
  isSuper: Boolean
  type: Site
}

# A shop
type Shop {
  id: String
  code: String
  name: String
  systemCurr: String
  isActive: Boolean
}

enum Site {
  admin
  shop
  member
}

input UpdateProductActiveInput {
  # Product id
  id: String!

  # active status
  isActive: Boolean!
}

input UpdateProductInput {
  # Product id
  id: String!

  # SKU
  sku: String!

  # Product name
  name: String!

  # Product description
  description: String!

  # Price currency
  curr: String!

  # Price currency
  price: Float!

  # Put product for sales
  isActive: Boolean!

  # Id of creator
  userId: String!
}

input UpdateUserActiveInput {
  # User id
  id: String!

  # active status
  isActive: Boolean!
}

input UpdateUserInput {
  # User Id
  id: String!

  # User email
  email: String!

  # User first name
  firstName: String!

  # User first name
  lastName: String!

  # Site type status
  type: Site!

  # List or role id
  roles: [String]!
}

# A user
type User {
  id: String
  email: String
  firstName: String
  lastName: String
  type: Site
  isActive: Boolean
  roles: [Role]
}

# A viewer
type Viewer {
  users(
    # id of the user
    id: String
    type: Site!

    # code of shop. This is required when type = shop
    shopCode: String
    first: Int!
  ): [User]
  roles(
    # id of the role
    id: String
    type: Site!
  ): [Role]
  products(
    # id of the product
    id: String
    shopCode: String!
  ): [Product]
  shops(
    # code of shop
    code: String!
  ): [Shop]
}
