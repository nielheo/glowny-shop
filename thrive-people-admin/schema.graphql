schema {
  query: query
  mutation: mutation
}

input AddUserInput {
  # User email
  email: String!

  # User first name
  firstName: String!

  # User first name
  lastName: String!

  # Site type status
  type: Site!

  # List or role id
  roles: [String]!
}

type mutation {
  # Update user active status
  updateUserActive(
    # User id
    input: UpdateUserActiveInput!
  ): User

  # Add New User
  addUser(
    # Add Usrr Input
    input: AddUserInput!
  ): User
}

type query {
  echo(message: String): String
  viewer: Viewer
}

# A role
type Role {
  id: String
  title: String
  isSuper: Boolean
  type: Site
}

enum Site {
  admin
  supplier
  client
}

input UpdateUserActiveInput {
  # User id
  id: String!

  # active status
  isActive: Boolean!
}

# A user
type User {
  id: String
  email: String
  firstName: String
  lastName: String
  type: Site
  isActive: Boolean
  roles: [Role]
}

# A viewer
type Viewer {
  users(
    # id of the user
    id: String
    type: Site!
  ): [User]
  roles(
    # id of the role
    id: String
    type: Site!
  ): [Role]
}
